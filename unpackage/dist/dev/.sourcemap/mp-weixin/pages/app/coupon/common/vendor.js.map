{"version":3,"sources":["uni-app:///node_modules/pure-svg-code/index.js","uni-app:///node_modules/pure-svg-code/barcode/index.js","uni-app:///node_modules/pure-svg-code/qrcode/index.js","uni-app:///node_modules/pure-svg-code/svg2url/index.js"],"names":["barcode","require","qrcode","svg2url","module","exports","settings","width","barWidth","barHeight","moduleSize","showHRI","addQuietZone","marginHRI","bgColor","color","fontSize","output","posX","posY","intval","val","type","replace","parseInt","isNaN","isFinite","Math","floor","i25","encoding","compute","code","crc","length","odd","v","sum","i","charAt","toString","getDigit","result","j","c1","c2","c","ean","first","len","substring","seq","upc","substr","msi","crc1","computeMod10","computeMod11","crc2","toPart1","n1","s1","weight","table","index","indexOf","code11","intercharacter","weightC","weightSumC","weightK","weightSumK","k","code39","toUpperCase","code93","code128","tableB","isum","value","tableCActivated","codabar","datamatrix","lengthRows","lengthCols","dataCWCount","solomonCWCount","dataRegionRows","dataRegionCols","regionRows","regionCols","interleavedBlocks","logTab","aLogTab","champGaloisMult","a","b","champGaloisDoub","champGaloisSum","selectIndex","dataCodeWordsCount","rectangular","n","encodeDataCodeWordsASCII","text","dataCodeWords","Array","charCodeAt","addPadCW","tab","from","to","r","calculSolFactorTable","g","addReedSolomonCW","nSolomonCW","coeffTab","nDataCW","dataTab","blocks","temp","errorBlocks","correctionCW","getBits","entier","bits","next","etape","totalRows","totalCols","codeWordsBits","assigned","chr","row","col","patternShapeSpecial1","patternShapeSpecial2","patternShapeSpecial3","patternShapeSpecial4","patternShapeStandard","placeBitInDatamatrix","bit","addFinderPattern","rowsRegion","colsRegion","rowsRegionCW","colsRegionCW","totalRowsCW","totalColsCW","datamatrixTemp","totalDataCWCount","totalCWCount","rowsTotal","colsTotal","rowsLengthMatrice","colsLengthMatrice","lec","cInt","byteCount","le","String","fromCharCode","cRgb","cHexColor","hex","bitStringTo2DArray","digit","d","digitToSvgRenderer","hri","callback","mwi","mhi","lines","columns","mw","mh","height","svg","bar1","current","y","x","toFixed","digitToSvg","w","h","digitToSvg2D","s","datas","rect","b2d","name","undefined","fname","QR8bitByte","data","mode","QRMode","MODE_8BIT_BYTE","parsedData","l","byteArray","push","prototype","concat","apply","unshift","getLength","buffer","write","put","QRCodeModel","typeNumber","errorCorrectLevel","modules","moduleCount","dataCache","dataList","addData","newData","isDark","Error","getModuleCount","make","makeImpl","getBestMaskPattern","test","maskPattern","setupPositionProbePattern","setupPositionAdjustPattern","setupTimingPattern","setupTypeInfo","setupTypeNumber","createData","mapData","minLostPoint","pattern","lostPoint","QRUtil","getLostPoint","createMovieClip","target_mc","instance_name","depth","qr_mc","createEmptyMovieClip","cs","dark","beginFill","moveTo","lineTo","endFill","pos","getPatternPosition","getBCHTypeNumber","mod","getBCHTypeInfo","inc","bitIndex","byteIndex","mask","getMask","PAD0","PAD1","rsBlocks","QRRSBlock","getRSBlocks","QRBitBuffer","getLengthInBits","totalDataCount","dataCount","putBit","createBytes","offset","maxDcCount","maxEcCount","dcdata","ecdata","dcCount","ecCount","totalCount","max","rsPoly","getErrorCorrectPolynomial","rawPoly","QRPolynomial","modPoly","modIndex","get","totalCodeCount","MODE_NUMBER","MODE_ALPHA_NUM","MODE_KANJI","QRErrorCorrectLevel","L","M","Q","H","QRMaskPattern","PATTERN000","PATTERN001","PATTERN010","PATTERN011","PATTERN100","PATTERN101","PATTERN110","PATTERN111","PATTERN_POSITION_TABLE","G15","G18","G15_MASK","getBCHDigit","errorCorrectLength","multiply","QRMath","gexp","qrCode","sameCount","count","darkCount","ratio","abs","glog","LOG_TABLE","EXP_TABLE","num","shift","e","RS_BLOCK_TABLE","rsBlock","getRsBlockTable","list","bufIndex","QRCodeLimitLength","QRCode","options","instance","padding","background","ecl","content","_getErrorCorrectLevel","_getTypeNumber","_getUTF8Length","limit","encodeURI","xsize","ysize","px","py","svg2Url","svgString","encodeURIComponent"],"mappings":"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E,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EACjE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EACnE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAClE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EACnE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EACnE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EACnE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EACpE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EACjE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACjE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EACrE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EACpE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EACrE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EACnE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IAClCC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE;IAAE;IAC7C,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EACrE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EACpE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACpE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EACpE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EACpE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EACpE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACtE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EACrE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EACtE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAC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","file":"pages/app/coupon/common/vendor.js","sourcesContent":["var barcode = require('./barcode');\nvar qrcode = require('./qrcode');\nvar svg2url = require('./svg2url');\n\nmodule.exports = {\n  barcode: barcode,\n  qrcode: qrcode,\n  svg2url: svg2url\n};\n","var barcode = {\n  settings: {\n    width: 100,\n    barWidth: 1,\n    barHeight: 50,\n    moduleSize: 1,\n    showHRI: false,\n    addQuietZone: false,\n    marginHRI: 0,\n    bgColor: \"transparent\",\n    color: \"#000000\",\n    fontSize: 12,\n    output: \"svg\",\n    posX: 0,\n    posY: 0\n  },\n  intval: function (val) {\n    var type = typeof(val);\n    if (type == 'string') {\n      val = val.replace(/[^0-9-.]/g, \"\");\n      val = parseInt(val * 1, 10);\n      return isNaN(val) || !isFinite(val) ? 0 : val;\n    }\n    return type == 'number' && isFinite(val) ? Math.floor(val) : 0;\n  },\n  i25: { // std25 int25\n    encoding: [\"NNWWN\", \"WNNNW\", \"NWNNW\", \"WWNNN\", \"NNWNW\", \"WNWNN\", \"NWWNN\", \"NNNWW\", \"WNNWN\", \"NWNWN\"],\n    compute: function (code, crc, type) {\n      if (!crc) {\n        if (code.length % 2 != 0) code = '0' + code;\n      } else {\n        if ((type == \"int25\") && (code.length % 2 == 0)) code = '0' + code;\n        var odd = true, v, sum = 0;\n        for (var i = code.length - 1; i > -1; i--) {\n          v = barcode.intval(code.charAt(i));\n          if (isNaN(v)) return (\"\");\n          sum += odd ? 3 * v : v;\n          odd = !odd;\n        }\n        code += ((10 - sum % 10) % 10).toString();\n      }\n      return (code);\n    },\n    getDigit: function (code, crc, type) {\n      code = this.compute(code, crc, type);\n      if (code == \"\") return (\"\");\n      result = \"\";\n\n      var i, j;\n      if (type == \"int25\") {\n        // Interleaved 2 of 5\n\n        // start\n        result += \"1010\";\n\n        // digits + CRC\n        var c1, c2;\n        for (i = 0; i < code.length / 2; i++) {\n          c1 = code.charAt(2 * i);\n          c2 = code.charAt(2 * i + 1);\n          for (j = 0; j < 5; j++) {\n            result += '1';\n            if (this.encoding[c1].charAt(j) == 'W') result += '1';\n            result += '0';\n            if (this.encoding[c2].charAt(j) == 'W') result += '0';\n          }\n        }\n        // stop\n        result += \"1101\";\n      } else if (type == \"std25\") {\n        // Standard 2 of 5 is a numeric-only barcode that has been in use a long time.\n        // Unlike Interleaved 2 of 5, all of the information is encoded in the bars; the spaces are fixed width and are used only to separate the bars.\n        // The code is self-checking and does not include a checksum.\n\n        // start\n        result += \"11011010\";\n\n        // digits + CRC\n        var c;\n        for (var i = 0; i < code.length; i++) {\n          c = code.charAt(i);\n          for (j = 0; j < 5; j++) {\n            result += '1';\n            if (this.encoding[c].charAt(j) == 'W') result += \"11\";\n            result += '0';\n          }\n        }\n        // stop\n        result += \"11010110\";\n      }\n      return (result);\n    }\n  },\n  ean: {\n    encoding: [[\"0001101\", \"0100111\", \"1110010\"],\n      [\"0011001\", \"0110011\", \"1100110\"],\n      [\"0010011\", \"0011011\", \"1101100\"],\n      [\"0111101\", \"0100001\", \"1000010\"],\n      [\"0100011\", \"0011101\", \"1011100\"],\n      [\"0110001\", \"0111001\", \"1001110\"],\n      [\"0101111\", \"0000101\", \"1010000\"],\n      [\"0111011\", \"0010001\", \"1000100\"],\n      [\"0110111\", \"0001001\", \"1001000\"],\n      [\"0001011\", \"0010111\", \"1110100\"]],\n    first: [\"000000\", \"001011\", \"001101\", \"001110\", \"010011\", \"011001\", \"011100\", \"010101\", \"010110\", \"011010\"],\n    getDigit: function (code, type) {\n      // Check len (12 for ean13, 7 for ean8)\n      var len = type == \"ean8\" ? 7 : 12;\n      code = code.substring(0, len);\n      if (code.length != len) return (\"\");\n      // Check each digit is numeric\n      var c;\n      for (var i = 0; i < code.length; i++) {\n        c = code.charAt(i);\n        if ((c < '0') || (c > '9')) return (\"\");\n      }\n      // get checksum\n      code = this.compute(code, type);\n\n      // process analyse\n      var result = \"101\"; // start\n\n      if (type == \"ean8\") {\n\n        // process left part\n        for (var i = 0; i < 4; i++) {\n          result += this.encoding[barcode.intval(code.charAt(i))][0];\n        }\n\n        // center guard bars\n        result += \"01010\";\n\n        // process right part\n        for (var i = 4; i < 8; i++) {\n          result += this.encoding[barcode.intval(code.charAt(i))][2];\n        }\n\n      } else { // ean13\n        // extract first digit and get sequence\n        var seq = this.first[barcode.intval(code.charAt(0))];\n\n        // process left part\n        for (var i = 1; i < 7; i++) {\n          result += this.encoding[barcode.intval(code.charAt(i))][barcode.intval(seq.charAt(i - 1))];\n        }\n\n        // center guard bars\n        result += \"01010\";\n\n        // process right part\n        for (var i = 7; i < 13; i++) {\n          result += this.encoding[barcode.intval(code.charAt(i))][2];\n        }\n      } // ean13\n\n      result += \"101\"; // stop\n      return (result);\n    },\n    compute: function (code, type) {\n      var len = type == \"ean13\" ? 12 : 7;\n      code = code.substring(0, len);\n      var sum = 0, odd = true;\n      for (var i = code.length - 1; i > -1; i--) {\n        sum += (odd ? 3 : 1) * barcode.intval(code.charAt(i));\n        odd = !odd;\n      }\n      return (code + ((10 - sum % 10) % 10).toString());\n    }\n  },\n  upc: {\n    getDigit: function (code) {\n      if (code.length < 12) {\n        code = '0' + code;\n      }\n      return barcode.ean.getDigit(code, 'ean13');\n    },\n    compute: function (code) {\n      if (code.length < 12) {\n        code = '0' + code;\n      }\n      return barcode.ean.compute(code, 'ean13').substr(1);\n    }\n  },\n  msi: {\n    encoding: [\"100100100100\", \"100100100110\", \"100100110100\", \"100100110110\",\n      \"100110100100\", \"100110100110\", \"100110110100\", \"100110110110\",\n      \"110100100100\", \"110100100110\"],\n    compute: function (code, crc) {\n      if (typeof(crc) == \"object\") {\n        if (crc.crc1 == \"mod10\") {\n          code = this.computeMod10(code);\n        } else if (crc.crc1 == \"mod11\") {\n          code = this.computeMod11(code);\n        }\n        if (crc.crc2 == \"mod10\") {\n          code = this.computeMod10(code);\n        } else if (crc.crc2 == \"mod11\") {\n          code = this.computeMod11(code);\n        }\n      } else if (typeof(crc) == \"boolean\") {\n        if (crc) code = this.computeMod10(code);\n      }\n      return (code);\n    },\n    computeMod10: function (code) {\n      var i,\n        toPart1 = code.length % 2;\n      var n1 = 0, sum = 0;\n      for (i = 0; i < code.length; i++) {\n        if (toPart1) {\n          n1 = 10 * n1 + barcode.intval(code.charAt(i));\n        } else {\n          sum += barcode.intval(code.charAt(i));\n        }\n        toPart1 = !toPart1;\n      }\n      var s1 = (2 * n1).toString();\n      for (i = 0; i < s1.length; i++) {\n        sum += barcode.intval(s1.charAt(i));\n      }\n      return (code + ((10 - sum % 10) % 10).toString());\n    },\n    computeMod11: function (code) {\n      var sum = 0, weight = 2;\n      for (var i = code.length - 1; i >= 0; i--) {\n        sum += weight * barcode.intval(code.charAt(i));\n        weight = weight == 7 ? 2 : weight + 1;\n      }\n      return (code + ((11 - sum % 11) % 11).toString());\n    },\n    getDigit: function (code, crc) {\n      var table = \"0123456789\";\n      var index = 0;\n      var result = \"\";\n\n      code = this.compute(code, false);\n\n      // start\n      result = \"110\";\n\n      // digits\n      for (i = 0; i < code.length; i++) {\n        index = table.indexOf(code.charAt(i));\n        if (index < 0) return (\"\");\n        result += this.encoding[index];\n      }\n\n      // stop\n      result += \"1001\";\n\n      return (result);\n    }\n  },\n  code11: {\n    encoding: [\"101011\", \"1101011\", \"1001011\", \"1100101\",\n      \"1011011\", \"1101101\", \"1001101\", \"1010011\",\n      \"1101001\", \"110101\", \"101101\"],\n    getDigit: function (code) {\n      var table = \"0123456789-\";\n      var i, index, result = \"\", intercharacter = '0'\n\n      // start\n      result = \"1011001\" + intercharacter;\n\n      // digits\n      for (i = 0; i < code.length; i++) {\n        index = table.indexOf(code.charAt(i));\n        if (index < 0) return (\"\");\n        result += this.encoding[index] + intercharacter;\n      }\n\n      // checksum\n      var weightC = 0,\n        weightSumC = 0,\n        weightK = 1, // start at 1 because the right-most character is \"C\" checksum\n        weightSumK = 0;\n      for (i = code.length - 1; i >= 0; i--) {\n        weightC = weightC == 10 ? 1 : weightC + 1;\n        weightK = weightK == 10 ? 1 : weightK + 1;\n\n        index = table.indexOf(code.charAt(i));\n\n        weightSumC += weightC * index;\n        weightSumK += weightK * index;\n      }\n\n      var c = weightSumC % 11;\n      weightSumK += c;\n      var k = weightSumK % 11;\n\n      result += this.encoding[c] + intercharacter;\n\n      if (code.length >= 10) {\n        result += this.encoding[k] + intercharacter;\n      }\n\n      // stop\n      result += \"1011001\";\n\n      return (result);\n    }\n  },\n  code39: {\n    encoding: [\"101001101101\", \"110100101011\", \"101100101011\", \"110110010101\",\n      \"101001101011\", \"110100110101\", \"101100110101\", \"101001011011\",\n      \"110100101101\", \"101100101101\", \"110101001011\", \"101101001011\",\n      \"110110100101\", \"101011001011\", \"110101100101\", \"101101100101\",\n      \"101010011011\", \"110101001101\", \"101101001101\", \"101011001101\",\n      \"110101010011\", \"101101010011\", \"110110101001\", \"101011010011\",\n      \"110101101001\", \"101101101001\", \"101010110011\", \"110101011001\",\n      \"101101011001\", \"101011011001\", \"110010101011\", \"100110101011\",\n      \"110011010101\", \"100101101011\", \"110010110101\", \"100110110101\",\n      \"100101011011\", \"110010101101\", \"100110101101\", \"100100100101\",\n      \"100100101001\", \"100101001001\", \"101001001001\", \"100101101101\"],\n    getDigit: function (code) {\n      var table = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%*\";\n      var i, index, result = \"\", intercharacter = '0';\n\n      if (code.indexOf('*') >= 0) return (\"\");\n\n      // Add Start and Stop charactere : *\n      code = (\"*\" + code + \"*\").toUpperCase();\n\n      for (i = 0; i < code.length; i++) {\n        index = table.indexOf(code.charAt(i));\n        if (index < 0) return (\"\");\n        if (i > 0) result += intercharacter;\n        result += this.encoding[index];\n      }\n      return (result);\n    }\n  },\n  code93: {\n    encoding: [\"100010100\", \"101001000\", \"101000100\", \"101000010\",\n      \"100101000\", \"100100100\", \"100100010\", \"101010000\",\n      \"100010010\", \"100001010\", \"110101000\", \"110100100\",\n      \"110100010\", \"110010100\", \"110010010\", \"110001010\",\n      \"101101000\", \"101100100\", \"101100010\", \"100110100\",\n      \"100011010\", \"101011000\", \"101001100\", \"101000110\",\n      \"100101100\", \"100010110\", \"110110100\", \"110110010\",\n      \"110101100\", \"110100110\", \"110010110\", \"110011010\",\n      \"101101100\", \"101100110\", \"100110110\", \"100111010\",\n      \"100101110\", \"111010100\", \"111010010\", \"111001010\",\n      \"101101110\", \"101110110\", \"110101110\", \"100100110\",\n      \"111011010\", \"111010110\", \"100110010\", \"101011110\"],\n    getDigit: function (code, crc) {\n      var table = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%____*\", // _ => ($), (%), (/) et (+)\n        c, result = \"\";\n\n      if (code.indexOf('*') >= 0) return (\"\");\n\n      code = code.toUpperCase();\n\n      // start :  *\n      result += this.encoding[47];\n\n      // digits\n      for (i = 0; i < code.length; i++) {\n        c = code.charAt(i);\n        index = table.indexOf(c);\n        if ((c == '_') || (index < 0)) return (\"\");\n        result += this.encoding[index];\n      }\n\n      // checksum\n      if (crc) {\n        var weightC = 0,\n          weightSumC = 0,\n          weightK = 1, // start at 1 because the right-most character is \"C\" checksum\n          weightSumK = 0;\n        for (i = code.length - 1; i >= 0; i--) {\n          weightC = weightC == 20 ? 1 : weightC + 1;\n          weightK = weightK == 15 ? 1 : weightK + 1;\n\n          index = table.indexOf(code.charAt(i));\n\n          weightSumC += weightC * index;\n          weightSumK += weightK * index;\n        }\n\n        var c = weightSumC % 47;\n        weightSumK += c;\n        var k = weightSumK % 47;\n\n        result += this.encoding[c];\n        result += this.encoding[k];\n      }\n\n      // stop : *\n      result += this.encoding[47];\n\n      // Terminaison bar\n      result += '1';\n      return (result);\n    }\n  },\n  code128: {\n    encoding: [\"11011001100\", \"11001101100\", \"11001100110\", \"10010011000\",\n      \"10010001100\", \"10001001100\", \"10011001000\", \"10011000100\",\n      \"10001100100\", \"11001001000\", \"11001000100\", \"11000100100\",\n      \"10110011100\", \"10011011100\", \"10011001110\", \"10111001100\",\n      \"10011101100\", \"10011100110\", \"11001110010\", \"11001011100\",\n      \"11001001110\", \"11011100100\", \"11001110100\", \"11101101110\",\n      \"11101001100\", \"11100101100\", \"11100100110\", \"11101100100\",\n      \"11100110100\", \"11100110010\", \"11011011000\", \"11011000110\",\n      \"11000110110\", \"10100011000\", \"10001011000\", \"10001000110\",\n      \"10110001000\", \"10001101000\", \"10001100010\", \"11010001000\",\n      \"11000101000\", \"11000100010\", \"10110111000\", \"10110001110\",\n      \"10001101110\", \"10111011000\", \"10111000110\", \"10001110110\",\n      \"11101110110\", \"11010001110\", \"11000101110\", \"11011101000\",\n      \"11011100010\", \"11011101110\", \"11101011000\", \"11101000110\",\n      \"11100010110\", \"11101101000\", \"11101100010\", \"11100011010\",\n      \"11101111010\", \"11001000010\", \"11110001010\", \"10100110000\",\n      \"10100001100\", \"10010110000\", \"10010000110\", \"10000101100\",\n      \"10000100110\", \"10110010000\", \"10110000100\", \"10011010000\",\n      \"10011000010\", \"10000110100\", \"10000110010\", \"11000010010\",\n      \"11001010000\", \"11110111010\", \"11000010100\", \"10001111010\",\n      \"10100111100\", \"10010111100\", \"10010011110\", \"10111100100\",\n      \"10011110100\", \"10011110010\", \"11110100100\", \"11110010100\",\n      \"11110010010\", \"11011011110\", \"11011110110\", \"11110110110\",\n      \"10101111000\", \"10100011110\", \"10001011110\", \"10111101000\",\n      \"10111100010\", \"11110101000\", \"11110100010\", \"10111011110\",\n      \"10111101110\", \"11101011110\", \"11110101110\", \"11010000100\",\n      \"11010010000\", \"11010011100\", \"11000111010\"],\n    getDigit: function (code) {\n      var tableB = \" !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\";\n      var result = \"\";\n      var sum = 0;\n      var isum = 0;\n      var i = 0;\n      var j = 0;\n      var value = 0;\n\n      // check each characters\n      for (i = 0; i < code.length; i++) {\n        if (tableB.indexOf(code.charAt(i)) == -1) return (\"\");\n      }\n\n      // check firsts characters : start with C table only if enought numeric\n      var tableCActivated = code.length > 1;\n      var c = '';\n      for (i = 0; i < 3 && i < code.length; i++) {\n        c = code.charAt(i);\n        tableCActivated &= c >= '0' && c <= '9';\n      }\n\n      sum = tableCActivated ? 105 : 104;\n\n      // start : [105] : C table or [104] : B table\n      result = this.encoding[sum];\n\n      i = 0;\n      while (i < code.length) {\n        if (!tableCActivated) {\n          j = 0;\n          // check next character to activate C table if interresting\n          while ((i + j < code.length) && (code.charAt(i + j) >= '0') && (code.charAt(i + j) <= '9')) j++;\n\n          // 6 min everywhere or 4 mini at the end\n          tableCActivated = (j > 5) || ((i + j - 1 == code.length) && (j > 3));\n\n          if (tableCActivated) {\n            result += this.encoding[99]; // C table\n            sum += ++isum * 99;\n          }\n          //         2 min for table C so need table B\n        } else if ((i == code.length) || (code.charAt(i) < '0') || (code.charAt(i) > '9') || (code.charAt(i + 1) < '0') || (code.charAt(i + 1) > '9')) {\n          tableCActivated = false;\n          result += this.encoding[100]; // B table\n          sum += ++isum * 100;\n        }\n\n        if (tableCActivated) {\n          value = barcode.intval(code.charAt(i) + code.charAt(i + 1)); // Add two characters (numeric)\n          i += 2;\n        } else {\n          value = tableB.indexOf(code.charAt(i)); // Add one character\n          i += 1;\n        }\n        result += this.encoding[value];\n        sum += ++isum * value;\n      }\n\n      // Add CRC\n      result += this.encoding[sum % 103];\n\n      // Stop\n      result += this.encoding[106];\n\n      // Termination bar\n      result += \"11\";\n\n      return (result);\n    }\n  },\n  codabar: {\n    encoding: [\"101010011\", \"101011001\", \"101001011\", \"110010101\",\n      \"101101001\", \"110101001\", \"100101011\", \"100101101\",\n      \"100110101\", \"110100101\", \"101001101\", \"101100101\",\n      \"1101011011\", \"1101101011\", \"1101101101\", \"1011011011\",\n      \"1011001001\", \"1010010011\", \"1001001011\", \"1010011001\"],\n    getDigit: function (code) {\n      var table = \"0123456789-$:/.+\";\n      var i, index, result = \"\", intercharacter = '0';\n\n      // add start : A->D : arbitrary choose A\n      result += this.encoding[16] + intercharacter;\n\n      for (i = 0; i < code.length; i++) {\n        index = table.indexOf(code.charAt(i));\n        if (index < 0) return (\"\");\n        result += this.encoding[index] + intercharacter;\n      }\n\n      // add stop : A->D : arbitrary choose A\n      result += this.encoding[16];\n      return (result);\n    }\n  },\n  datamatrix: {\n    lengthRows: [10, 12, 14, 16, 18, 20, 22, 24, 26,  // 24 squares et 6 rectangular\n      32, 36, 40, 44, 48, 52, 64, 72, 80, 88, 96, 104, 120, 132, 144,\n      8, 8, 12, 12, 16, 16],\n    lengthCols: [10, 12, 14, 16, 18, 20, 22, 24, 26,  // Number of columns for the entire datamatrix\n      32, 36, 40, 44, 48, 52, 64, 72, 80, 88, 96, 104, 120, 132, 144,\n      18, 32, 26, 36, 36, 48],\n    dataCWCount: [3, 5, 8, 12, 18, 22, 30, 36,  // Number of data codewords for the datamatrix\n      44, 62, 86, 114, 144, 174, 204, 280, 368, 456, 576, 696, 816, 1050,\n      1304, 1558, 5, 10, 16, 22, 32, 49],\n    solomonCWCount: [5, 7, 10, 12, 14, 18, 20, 24, 28, // Number of Reed-Solomon codewords for the datamatrix\n      36, 42, 48, 56, 68, 84, 112, 144, 192, 224, 272, 336, 408, 496, 620,\n      7, 11, 14, 18, 24, 28],\n    dataRegionRows: [8, 10, 12, 14, 16, 18, 20, 22, // Number of rows per region\n      24, 14, 16, 18, 20, 22, 24, 14, 16, 18, 20, 22, 24, 18, 20, 22,\n      6, 6, 10, 10, 14, 14],\n    dataRegionCols: [8, 10, 12, 14, 16, 18, 20, 22, // Number of columns per region\n      24, 14, 16, 18, 20, 22, 24, 14, 16, 18, 20, 22, 24, 18, 20, 22,\n      16, 14, 24, 16, 16, 22],\n    regionRows: [1, 1, 1, 1, 1, 1, 1, 1, // Number of regions per row\n      1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 6, 6, 6,\n      1, 1, 1, 1, 1, 1],\n    regionCols: [1, 1, 1, 1, 1, 1, 1, 1, // Number of regions per column\n      1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 6, 6, 6,\n      1, 2, 1, 2, 2, 2],\n    interleavedBlocks: [1, 1, 1, 1, 1, 1, 1, 1, // Number of blocks\n      1, 1, 1, 1, 1, 1, 2, 2, 4, 4, 4, 4, 6, 6, 8, 8,\n      1, 1, 1, 1, 1, 1],\n    logTab: [-255, 255, 1, 240, 2, 225, 241, 53, 3,  // Table of log for the Galois field\n      38, 226, 133, 242, 43, 54, 210, 4, 195, 39, 114, 227, 106, 134, 28,\n      243, 140, 44, 23, 55, 118, 211, 234, 5, 219, 196, 96, 40, 222, 115,\n      103, 228, 78, 107, 125, 135, 8, 29, 162, 244, 186, 141, 180, 45, 99,\n      24, 49, 56, 13, 119, 153, 212, 199, 235, 91, 6, 76, 220, 217, 197,\n      11, 97, 184, 41, 36, 223, 253, 116, 138, 104, 193, 229, 86, 79, 171,\n      108, 165, 126, 145, 136, 34, 9, 74, 30, 32, 163, 84, 245, 173, 187,\n      204, 142, 81, 181, 190, 46, 88, 100, 159, 25, 231, 50, 207, 57, 147,\n      14, 67, 120, 128, 154, 248, 213, 167, 200, 63, 236, 110, 92, 176, 7,\n      161, 77, 124, 221, 102, 218, 95, 198, 90, 12, 152, 98, 48, 185, 179,\n      42, 209, 37, 132, 224, 52, 254, 239, 117, 233, 139, 22, 105, 27, 194,\n      113, 230, 206, 87, 158, 80, 189, 172, 203, 109, 175, 166, 62, 127,\n      247, 146, 66, 137, 192, 35, 252, 10, 183, 75, 216, 31, 83, 33, 73,\n      164, 144, 85, 170, 246, 65, 174, 61, 188, 202, 205, 157, 143, 169, 82,\n      72, 182, 215, 191, 251, 47, 178, 89, 151, 101, 94, 160, 123, 26, 112,\n      232, 21, 51, 238, 208, 131, 58, 69, 148, 18, 15, 16, 68, 17, 121, 149,\n      129, 19, 155, 59, 249, 70, 214, 250, 168, 71, 201, 156, 64, 60, 237,\n      130, 111, 20, 93, 122, 177, 150],\n    aLogTab: [1, 2, 4, 8, 16, 32, 64, 128, 45, 90, // Table of aLog for the Galois field\n      180, 69, 138, 57, 114, 228, 229, 231, 227, 235, 251, 219, 155, 27, 54,\n      108, 216, 157, 23, 46, 92, 184, 93, 186, 89, 178, 73, 146, 9, 18, 36,\n      72, 144, 13, 26, 52, 104, 208, 141, 55, 110, 220, 149, 7, 14, 28, 56,\n      112, 224, 237, 247, 195, 171, 123, 246, 193, 175, 115, 230, 225, 239,\n      243, 203, 187, 91, 182, 65, 130, 41, 82, 164, 101, 202, 185, 95, 190,\n      81, 162, 105, 210, 137, 63, 126, 252, 213, 135, 35, 70, 140, 53, 106,\n      212, 133, 39, 78, 156, 21, 42, 84, 168, 125, 250, 217, 159, 19, 38, 76,\n      152, 29, 58, 116, 232, 253, 215, 131, 43, 86, 172, 117, 234, 249, 223,\n      147, 11, 22, 44, 88, 176, 77, 154, 25, 50, 100, 200, 189, 87, 174, 113,\n      226, 233, 255, 211, 139, 59, 118, 236, 245, 199, 163, 107, 214, 129,\n      47, 94, 188, 85, 170, 121, 242, 201, 191, 83, 166, 97, 194, 169, 127,\n      254, 209, 143, 51, 102, 204, 181, 71, 142, 49, 98, 196, 165, 103, 206,\n      177, 79, 158, 17, 34, 68, 136, 61, 122, 244, 197, 167, 99, 198, 161,\n      111, 222, 145, 15, 30, 60, 120, 240, 205, 183, 67, 134, 33, 66, 132,\n      37, 74, 148, 5, 10, 20, 40, 80, 160, 109, 218, 153, 31, 62, 124, 248,\n      221, 151, 3, 6, 12, 24, 48, 96, 192, 173, 119, 238, 241, 207, 179, 75,\n      150, 1],\n    champGaloisMult: function (a, b) {  // MULTIPLICATION IN GALOIS FIELD GF(2^8)\n      if (!a || !b) return 0;\n      return this.aLogTab[(this.logTab[a] + this.logTab[b]) % 255];\n    },\n    champGaloisDoub: function (a, b) {  // THE OPERATION a * 2^b IN GALOIS FIELD GF(2^8)\n      if (!a) return 0;\n      if (!b) return a;\n      return this.aLogTab[(this.logTab[a] + b) % 255];\n    },\n    champGaloisSum: function (a, b) { // SUM IN GALOIS FIELD GF(2^8)\n      return a ^ b;\n    },\n    selectIndex: function (dataCodeWordsCount, rectangular) { // CHOOSE THE GOOD INDEX FOR TABLES\n      if ((dataCodeWordsCount < 1 || dataCodeWordsCount > 1558) && !rectangular) return -1;\n      if ((dataCodeWordsCount < 1 || dataCodeWordsCount > 49) && rectangular) return -1;\n\n      var n = 0;\n      if (rectangular) n = 24;\n\n      while (this.dataCWCount[n] < dataCodeWordsCount) n++;\n      return n;\n    },\n    encodeDataCodeWordsASCII: function (text) {\n      var dataCodeWords = new Array();\n      var n = 0, i, c;\n      for (i = 0; i < text.length; i++) {\n        c = text.charCodeAt(i);\n        if (c > 127) {\n          dataCodeWords[n] = 235;\n          c = c - 127;\n          n++;\n        } else if ((c >= 48 && c <= 57) && (i + 1 < text.length) && (text.charCodeAt(i + 1) >= 48 && text.charCodeAt(i + 1) <= 57)) {\n          c = ((c - 48) * 10) + ((text.charCodeAt(i + 1)) - 48);\n          c += 130;\n          i++;\n        } else c++;\n        dataCodeWords[n] = c;\n        n++;\n      }\n      return dataCodeWords;\n    },\n    addPadCW: function (tab, from, to) {\n      if (from >= to) return;\n      tab[from] = 129;\n      var r, i;\n      for (i = from + 1; i < to; i++) {\n        r = ((149 * (i + 1)) % 253) + 1;\n        tab[i] = (129 + r) % 254;\n      }\n    },\n    calculSolFactorTable: function (solomonCWCount) { // CALCULATE THE REED SOLOMON FACTORS\n      var g = new Array();\n      var i, j;\n\n      for (i = 0; i <= solomonCWCount; i++) g[i] = 1;\n\n      for (i = 1; i <= solomonCWCount; i++) {\n        for (j = i - 1; j >= 0; j--) {\n          g[j] = this.champGaloisDoub(g[j], i);\n          if (j > 0) g[j] = this.champGaloisSum(g[j], g[j - 1]);\n        }\n      }\n      return g;\n    },\n    addReedSolomonCW: function (nSolomonCW, coeffTab, nDataCW, dataTab, blocks) { // Add the Reed Solomon codewords\n      var temp = 0;\n      var errorBlocks = nSolomonCW / blocks;\n      var correctionCW = new Array();\n\n      var i, j, k;\n      for (k = 0; k < blocks; k++) {\n        for (i = 0; i < errorBlocks; i++) correctionCW[i] = 0;\n\n        for (i = k; i < nDataCW; i = i + blocks) {\n          temp = this.champGaloisSum(dataTab[i], correctionCW[errorBlocks - 1]);\n          for (j = errorBlocks - 1; j >= 0; j--) {\n            if (!temp) {\n              correctionCW[j] = 0;\n            } else {\n              correctionCW[j] = this.champGaloisMult(temp, coeffTab[j]);\n            }\n            if (j > 0) correctionCW[j] = this.champGaloisSum(correctionCW[j - 1], correctionCW[j]);\n          }\n        }\n        // Renversement des blocs calcules\n        j = nDataCW + k;\n        for (i = errorBlocks - 1; i >= 0; i--) {\n          dataTab[j] = correctionCW[i];\n          j = j + blocks;\n        }\n      }\n      return dataTab;\n    },\n    getBits: function (entier) { // Transform integer to tab of bits\n      var bits = new Array();\n      for (var i = 0; i < 8; i++) {\n        bits[i] = entier & (128 >> i) ? 1 : 0;\n      }\n      return bits;\n    },\n    next: function (etape, totalRows, totalCols, codeWordsBits, datamatrix, assigned) { // Place codewords into the matrix\n      var chr = 0; // Place of the 8st bit from the first character to [4][0]\n      var row = 4;\n      var col = 0;\n\n      do {\n        // Check for a special case of corner\n        if ((row == totalRows) && (col == 0)) {\n          this.patternShapeSpecial1(datamatrix, assigned, codeWordsBits[chr], totalRows, totalCols);\n          chr++;\n        } else if ((etape < 3) && (row == totalRows - 2) && (col == 0) && (totalCols % 4 != 0)) {\n          this.patternShapeSpecial2(datamatrix, assigned, codeWordsBits[chr], totalRows, totalCols);\n          chr++;\n        } else if ((row == totalRows - 2) && (col == 0) && (totalCols % 8 == 4)) {\n          this.patternShapeSpecial3(datamatrix, assigned, codeWordsBits[chr], totalRows, totalCols);\n          chr++;\n        }\n        else if ((row == totalRows + 4) && (col == 2) && (totalCols % 8 == 0)) {\n          this.patternShapeSpecial4(datamatrix, assigned, codeWordsBits[chr], totalRows, totalCols);\n          chr++;\n        }\n\n        // Go up and right in the datamatrix\n        do {\n          if ((row < totalRows) && (col >= 0) && (assigned[row][col] != 1)) {\n            this.patternShapeStandard(datamatrix, assigned, codeWordsBits[chr], row, col, totalRows, totalCols);\n            chr++;\n          }\n          row -= 2;\n          col += 2;\n        } while ((row >= 0) && (col < totalCols));\n        row += 1;\n        col += 3;\n\n        // Go down and left in the datamatrix\n        do {\n          if ((row >= 0) && (col < totalCols) && (assigned[row][col] != 1)) {\n            this.patternShapeStandard(datamatrix, assigned, codeWordsBits[chr], row, col, totalRows, totalCols);\n            chr++;\n          }\n          row += 2;\n          col -= 2;\n        } while ((row < totalRows) && (col >= 0));\n        row += 3;\n        col += 1;\n      } while ((row < totalRows) || (col < totalCols));\n    },\n    patternShapeStandard: function (datamatrix, assigned, bits, row, col, totalRows, totalCols) { // Place bits in the matrix (standard or special case)\n      this.placeBitInDatamatrix(datamatrix, assigned, bits[0], row - 2, col - 2, totalRows, totalCols);\n      this.placeBitInDatamatrix(datamatrix, assigned, bits[1], row - 2, col - 1, totalRows, totalCols);\n      this.placeBitInDatamatrix(datamatrix, assigned, bits[2], row - 1, col - 2, totalRows, totalCols);\n      this.placeBitInDatamatrix(datamatrix, assigned, bits[3], row - 1, col - 1, totalRows, totalCols);\n      this.placeBitInDatamatrix(datamatrix, assigned, bits[4], row - 1, col, totalRows, totalCols);\n      this.placeBitInDatamatrix(datamatrix, assigned, bits[5], row, col - 2, totalRows, totalCols);\n      this.placeBitInDatamatrix(datamatrix, assigned, bits[6], row, col - 1, totalRows, totalCols);\n      this.placeBitInDatamatrix(datamatrix, assigned, bits[7], row, col, totalRows, totalCols);\n    },\n    patternShapeSpecial1: function (datamatrix, assigned, bits, totalRows, totalCols) {\n      this.placeBitInDatamatrix(datamatrix, assigned, bits[0], totalRows - 1, 0, totalRows, totalCols);\n      this.placeBitInDatamatrix(datamatrix, assigned, bits[1], totalRows - 1, 1, totalRows, totalCols);\n      this.placeBitInDatamatrix(datamatrix, assigned, bits[2], totalRows - 1, 2, totalRows, totalCols);\n      this.placeBitInDatamatrix(datamatrix, assigned, bits[3], 0, totalCols - 2, totalRows, totalCols);\n      this.placeBitInDatamatrix(datamatrix, assigned, bits[4], 0, totalCols - 1, totalRows, totalCols);\n      this.placeBitInDatamatrix(datamatrix, assigned, bits[5], 1, totalCols - 1, totalRows, totalCols);\n      this.placeBitInDatamatrix(datamatrix, assigned, bits[6], 2, totalCols - 1, totalRows, totalCols);\n      this.placeBitInDatamatrix(datamatrix, assigned, bits[7], 3, totalCols - 1, totalRows, totalCols);\n    },\n    patternShapeSpecial2: function (datamatrix, assigned, bits, totalRows, totalCols) {\n      this.placeBitInDatamatrix(datamatrix, assigned, bits[0], totalRows - 3, 0, totalRows, totalCols);\n      this.placeBitInDatamatrix(datamatrix, assigned, bits[1], totalRows - 2, 0, totalRows, totalCols);\n      this.placeBitInDatamatrix(datamatrix, assigned, bits[2], totalRows - 1, 0, totalRows, totalCols);\n      this.placeBitInDatamatrix(datamatrix, assigned, bits[3], 0, totalCols - 4, totalRows, totalCols);\n      this.placeBitInDatamatrix(datamatrix, assigned, bits[4], 0, totalCols - 3, totalRows, totalCols);\n      this.placeBitInDatamatrix(datamatrix, assigned, bits[5], 0, totalCols - 2, totalRows, totalCols);\n      this.placeBitInDatamatrix(datamatrix, assigned, bits[6], 0, totalCols - 1, totalRows, totalCols);\n      this.placeBitInDatamatrix(datamatrix, assigned, bits[7], 1, totalCols - 1, totalRows, totalCols);\n    },\n    patternShapeSpecial3: function (datamatrix, assigned, bits, totalRows, totalCols) {\n      this.placeBitInDatamatrix(datamatrix, assigned, bits[0], totalRows - 3, 0, totalRows, totalCols);\n      this.placeBitInDatamatrix(datamatrix, assigned, bits[1], totalRows - 2, 0, totalRows, totalCols);\n      this.placeBitInDatamatrix(datamatrix, assigned, bits[2], totalRows - 1, 0, totalRows, totalCols);\n      this.placeBitInDatamatrix(datamatrix, assigned, bits[3], 0, totalCols - 2, totalRows, totalCols);\n      this.placeBitInDatamatrix(datamatrix, assigned, bits[4], 0, totalCols - 1, totalRows, totalCols);\n      this.placeBitInDatamatrix(datamatrix, assigned, bits[5], 1, totalCols - 1, totalRows, totalCols);\n      this.placeBitInDatamatrix(datamatrix, assigned, bits[6], 2, totalCols - 1, totalRows, totalCols);\n      this.placeBitInDatamatrix(datamatrix, assigned, bits[7], 3, totalCols - 1, totalRows, totalCols);\n    },\n    patternShapeSpecial4: function (datamatrix, assigned, bits, totalRows, totalCols) {\n      this.placeBitInDatamatrix(datamatrix, assigned, bits[0], totalRows - 1, 0, totalRows, totalCols);\n      this.placeBitInDatamatrix(datamatrix, assigned, bits[1], totalRows - 1, totalCols - 1, totalRows, totalCols);\n      this.placeBitInDatamatrix(datamatrix, assigned, bits[2], 0, totalCols - 3, totalRows, totalCols);\n      this.placeBitInDatamatrix(datamatrix, assigned, bits[3], 0, totalCols - 2, totalRows, totalCols);\n      this.placeBitInDatamatrix(datamatrix, assigned, bits[4], 0, totalCols - 1, totalRows, totalCols);\n      this.placeBitInDatamatrix(datamatrix, assigned, bits[5], 1, totalCols - 3, totalRows, totalCols);\n      this.placeBitInDatamatrix(datamatrix, assigned, bits[6], 1, totalCols - 2, totalRows, totalCols);\n      this.placeBitInDatamatrix(datamatrix, assigned, bits[7], 1, totalCols - 1, totalRows, totalCols);\n    },\n    placeBitInDatamatrix: function (datamatrix, assigned, bit, row, col, totalRows, totalCols) { // Put a bit into the matrix\n      if (row < 0) {\n        row += totalRows;\n        col += 4 - ((totalRows + 4) % 8);\n      }\n      if (col < 0) {\n        col += totalCols;\n        row += 4 - ((totalCols + 4) % 8);\n      }\n      if (assigned[row][col] != 1) {\n        datamatrix[row][col] = bit;\n        assigned[row][col] = 1;\n      }\n    },\n    addFinderPattern: function (datamatrix, rowsRegion, colsRegion, rowsRegionCW, colsRegionCW) { // Add the finder pattern\n      var totalRowsCW = (rowsRegionCW + 2) * rowsRegion;\n      var totalColsCW = (colsRegionCW + 2) * colsRegion;\n\n      var datamatrixTemp = new Array();\n      datamatrixTemp[0] = new Array();\n      for (var j = 0; j < totalColsCW + 2; j++) {\n        datamatrixTemp[0][j] = 0;\n      }\n      for (var i = 0; i < totalRowsCW; i++) {\n        datamatrixTemp[i + 1] = new Array();\n        datamatrixTemp[i + 1][0] = 0;\n        datamatrixTemp[i + 1][totalColsCW + 1] = 0;\n        for (var j = 0; j < totalColsCW; j++) {\n          if (i % (rowsRegionCW + 2) == 0) {\n            if (j % 2 == 0) {\n              datamatrixTemp[i + 1][j + 1] = 1;\n            } else {\n              datamatrixTemp[i + 1][j + 1] = 0;\n            }\n          } else if (i % (rowsRegionCW + 2) == rowsRegionCW + 1) {\n            datamatrixTemp[i + 1][j + 1] = 1;\n          } else if (j % (colsRegionCW + 2) == colsRegionCW + 1) {\n            if (i % 2 == 0) {\n              datamatrixTemp[i + 1][j + 1] = 0;\n            } else {\n              datamatrixTemp[i + 1][j + 1] = 1;\n            }\n          } else if (j % (colsRegionCW + 2) == 0) {\n            datamatrixTemp[i + 1][j + 1] = 1;\n          } else {\n            datamatrixTemp[i + 1][j + 1] = 0;\n            datamatrixTemp[i + 1][j + 1] = datamatrix[i - 1 - (2 * (parseInt(i / (rowsRegionCW + 2))))][j - 1 - (2 * (parseInt(j / (colsRegionCW + 2))))];\n          }\n        }\n      }\n      datamatrixTemp[totalRowsCW + 1] = new Array();\n      for (var j = 0; j < totalColsCW + 2; j++) {\n        datamatrixTemp[totalRowsCW + 1][j] = 0;\n      }\n      return datamatrixTemp;\n    },\n    getDigit: function (text, rectangular) {\n      var dataCodeWords = this.encodeDataCodeWordsASCII(text); // Code the text in the ASCII mode\n      var dataCWCount = dataCodeWords.length;\n      var index = this.selectIndex(dataCWCount, rectangular); // Select the index for the data tables\n      var totalDataCWCount = this.dataCWCount[index]; // Number of data CW\n      var solomonCWCount = this.solomonCWCount[index]; // Number of Reed Solomon CW\n      var totalCWCount = totalDataCWCount + solomonCWCount; // Number of CW\n      var rowsTotal = this.lengthRows[index]; // Size of symbol\n      var colsTotal = this.lengthCols[index];\n      var rowsRegion = this.regionRows[index]; // Number of region\n      var colsRegion = this.regionCols[index];\n      var rowsRegionCW = this.dataRegionRows[index];\n      var colsRegionCW = this.dataRegionCols[index];\n      var rowsLengthMatrice = rowsTotal - 2 * rowsRegion; // Size of matrice data\n      var colsLengthMatrice = colsTotal - 2 * colsRegion;\n      var blocks = this.interleavedBlocks[index];  // Number of Reed Solomon blocks\n      var errorBlocks = (solomonCWCount / blocks);\n\n      this.addPadCW(dataCodeWords, dataCWCount, totalDataCWCount); // Add codewords pads\n\n      var g = this.calculSolFactorTable(errorBlocks); // Calculate correction coefficients\n\n      this.addReedSolomonCW(solomonCWCount, g, totalDataCWCount, dataCodeWords, blocks); // Add Reed Solomon codewords\n\n      var codeWordsBits = new Array(); // Calculte bits from codewords\n      for (var i = 0; i < totalCWCount; i++) {\n        codeWordsBits[i] = this.getBits(dataCodeWords[i]);\n      }\n\n      var datamatrix = new Array(); // Put data in the matrix\n      var assigned = new Array();\n\n      for (var i = 0; i < colsLengthMatrice; i++) {\n        datamatrix[i] = new Array();\n        assigned[i] = new Array();\n      }\n\n      // Add the bottom-right corner if needed\n      if (((rowsLengthMatrice * colsLengthMatrice) % 8) == 4) {\n        datamatrix[rowsLengthMatrice - 2][colsLengthMatrice - 2] = 1;\n        datamatrix[rowsLengthMatrice - 1][colsLengthMatrice - 1] = 1;\n        datamatrix[rowsLengthMatrice - 1][colsLengthMatrice - 2] = 0;\n        datamatrix[rowsLengthMatrice - 2][colsLengthMatrice - 1] = 0;\n        assigned[rowsLengthMatrice - 2][colsLengthMatrice - 2] = 1;\n        assigned[rowsLengthMatrice - 1][colsLengthMatrice - 1] = 1;\n        assigned[rowsLengthMatrice - 1][colsLengthMatrice - 2] = 1;\n        assigned[rowsLengthMatrice - 2][colsLengthMatrice - 1] = 1;\n      }\n\n      // Put the codewords into the matrix\n      this.next(0, rowsLengthMatrice, colsLengthMatrice, codeWordsBits, datamatrix, assigned);\n\n      // Add the finder pattern\n      datamatrix = this.addFinderPattern(datamatrix, rowsRegion, colsRegion, rowsRegionCW, colsRegionCW);\n\n      return datamatrix;\n    }\n  },\n  // little endian convertor\n  lec: {\n    // convert an int\n    cInt: function (value, byteCount) {\n      var le = '';\n      for (var i = 0; i < byteCount; i++) {\n        le += String.fromCharCode(value & 0xFF);\n        value = value >> 8;\n      }\n      return le;\n    },\n    // return a byte string from rgb values\n    cRgb: function (r, g, b) {\n      return String.fromCharCode(b) + String.fromCharCode(g) + String.fromCharCode(r);\n    },\n    // return a byte string from a hex string color\n    cHexColor: function (hex) {\n      var v = parseInt('0x' + hex.substr(1));\n      var b = v & 0xFF;\n      v = v >> 8;\n      var g = v & 0xFF;\n      var r = v >> 8;\n      return (this.cRgb(r, g, b));\n    }\n  },\n  // convert a bit string to an array of array of bit char\n  bitStringTo2DArray: function (digit) {\n    var d = [];\n    d[0] = [];\n    for (var i = 0; i < digit.length; i++) d[0][i] = digit.charAt(i);\n    return (d);\n  },\n\n  // svg barcode renderer\n  digitToSvgRenderer: function (settings, digit, hri, callback, mwi, mhi) {\n    var lines = digit.length;\n    var columns = digit[0].length;\n\n    var width = settings.width;\n    var mw = width / columns;\n    var mh = mhi;\n    var height = mh * lines;\n    if (settings.showHRI) {\n      var fontSize = barcode.intval(settings.fontSize);\n      height += barcode.intval(settings.marginHRI) + fontSize;\n    }\n    // svg header\n    var svg = '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 ' + width + ' ' + height + '\">';\n    if (settings.bgColor !== 'transparent') {\n      // background\n      svg += '<rect width=\"' + width + '\" height=\"' + height + '\" x=\"0\" y=\"0\" fill=\"' + settings.bgColor + '\"/>';\n    }\n\n    var bar1 = '<rect width=\"&W\" height=\"' + mh + '\" x=\"&X\" y=\"&Y\" fill=\"' + settings.color + '\"/>';\n    if (settings.color === \"#000000\") {\n      bar1 = '<rect width=\"&W\" height=\"' + mh + '\" x=\"&X\" y=\"&Y\"/>';\n    }\n    var len, current;\n    for (var y = 0; y < lines; y++) {\n      len = 0;\n      current = digit[y][0];\n      for (var x = 0; x < columns; x++) {\n        if (current == digit[y][x]) {\n          len++;\n        } else {\n          if (current == '1') {\n            svg += bar1.replace(\"&W\", (len * mw).toFixed(1))\n              .replace(\"&X\", ((x - len) * mw).toFixed(1))\n              .replace(\"&Y\", y * mh);\n          }\n          current = digit[y][x];\n          len = 1;\n        }\n      }\n      if ((len > 0) && (current == '1')) {\n        svg += bar1.replace(\"&W\", (len * mw).toFixed(1))\n          .replace(\"&X\", ((columns - len) * mw).toFixed(1))\n          .replace(\"&Y\", (y * mh).toFixed(1));\n      }\n    }\n\n    if (settings.showHRI) {\n      svg += '<text transform=\"translate(50 0)\" y=\"60\" text-anchor=\"middle\">' + hri + '</text>';\n    }\n    // svg footer\n    svg += '</svg>';\n    return svg;\n  },\n  // svg 1D barcode renderer\n  digitToSvg: function (settings, digit, hri, callback) {\n    var w = barcode.intval(settings.barWidth);\n    var h = barcode.intval(settings.barHeight);\n    return this.digitToSvgRenderer(settings, this.bitStringTo2DArray(digit), hri, callback, w, h);\n  },\n  // svg 2D barcode renderer\n  digitToSvg2D: function (settings, digit, hri, callback) {\n    var s = barcode.intval(settings.moduleSize);\n    return this.digitToSvgRenderer(settings, digit, hri, callback, s, s);\n  },\n\n};\n\nmodule.exports = function (datas, type, settings, callback) {\n  var digit = \"\",\n    hri = \"\",\n    code = \"\",\n    crc = true,\n    rect = false,\n    b2d = false;\n\n  if (typeof(datas) == \"string\") {\n    code = datas;\n  } else if (typeof(datas) == \"object\") {\n    code = typeof(datas.code) == \"string\" ? datas.code : \"\";\n    crc = typeof(datas.crc) != \"undefined\" ? datas.crc : true;\n    rect = typeof(datas.rect) != \"undefined\" ? datas.rect : false;\n  }\n  if (code == \"\") return (false);\n\n  if (typeof(settings) == \"undefined\") settings = [];\n  for (var name in barcode.settings) {\n    if (settings[name] == undefined) settings[name] = barcode.settings[name];\n  }\n\n  switch (type) {\n    case \"std25\":\n    case \"int25\":\n      digit = barcode.i25.getDigit(code, crc, type);\n      hri = barcode.i25.compute(code, crc, type);\n      break;\n    case \"ean8\":\n    case \"ean13\":\n      digit = barcode.ean.getDigit(code, type);\n      hri = barcode.ean.compute(code, type);\n      break;\n    case \"upc\":\n      digit = barcode.upc.getDigit(code);\n      hri = barcode.upc.compute(code);\n      break;\n    case \"code11\":\n      digit = barcode.code11.getDigit(code);\n      hri = code;\n      break;\n    case \"code39\":\n      digit = barcode.code39.getDigit(code);\n      hri = code;\n      break;\n    case \"code93\":\n      digit = barcode.code93.getDigit(code, crc);\n      hri = code;\n      break;\n    case \"code128\":\n      digit = barcode.code128.getDigit(code);\n      hri = code;\n      break;\n    case \"codabar\":\n      digit = barcode.codabar.getDigit(code);\n      hri = code;\n      break;\n    case \"msi\":\n      digit = barcode.msi.getDigit(code, crc);\n      hri = barcode.msi.compute(code, crc);\n      break;\n    case \"datamatrix\":\n      digit = barcode.datamatrix.getDigit(code, rect);\n      hri = code;\n      b2d = true;\n      break;\n  }\n  if (digit.length == 0) return false;\n\n  // Quiet Zone\n  if (!b2d && settings.addQuietZone) digit = \"0000000000\" + digit + \"0000000000\";\n\n  var fname = 'digitTo' + settings.output.charAt(0).toUpperCase() + settings.output.substr(1) + (b2d ? '2D' : '');\n  //if (typeof(barcode[fname]) == 'function' && settings.toFile === false) {\n  //    return barcode[fname](settings, digit, hri, callback);\n  //}else\n  if (typeof(barcode[fname]) == 'function') {\n    return barcode[fname](settings, digit, hri, callback);\n  }\n};\n","function QR8bitByte(data) {\n  this.mode = QRMode.MODE_8BIT_BYTE;\n  this.data = data;\n  this.parsedData = [];\n\n  // Added to support UTF-8 Characters\n  for (var i = 0, l = this.data.length; i < l; i++) {\n    var byteArray = [];\n    var code = this.data.charCodeAt(i);\n\n    if (code > 0x10000) {\n      byteArray[0] = 0xF0 | ((code & 0x1C0000) >>> 18);\n      byteArray[1] = 0x80 | ((code & 0x3F000) >>> 12);\n      byteArray[2] = 0x80 | ((code & 0xFC0) >>> 6);\n      byteArray[3] = 0x80 | (code & 0x3F);\n    } else if (code > 0x800) {\n      byteArray[0] = 0xE0 | ((code & 0xF000) >>> 12);\n      byteArray[1] = 0x80 | ((code & 0xFC0) >>> 6);\n      byteArray[2] = 0x80 | (code & 0x3F);\n    } else if (code > 0x80) {\n      byteArray[0] = 0xC0 | ((code & 0x7C0) >>> 6);\n      byteArray[1] = 0x80 | (code & 0x3F);\n    } else {\n      byteArray[0] = code;\n    }\n\n    this.parsedData.push(byteArray);\n  }\n\n  this.parsedData = Array.prototype.concat.apply([], this.parsedData);\n\n  if (this.parsedData.length != this.data.length) {\n    this.parsedData.unshift(191);\n    this.parsedData.unshift(187);\n    this.parsedData.unshift(239);\n  }\n}\n\nQR8bitByte.prototype = {\n  getLength: function (buffer) {\n    return this.parsedData.length;\n  },\n  write: function (buffer) {\n    for (var i = 0, l = this.parsedData.length; i < l; i++) {\n      buffer.put(this.parsedData[i], 8);\n    }\n  }\n};\n\nfunction QRCodeModel(typeNumber, errorCorrectLevel) {\n  this.typeNumber = typeNumber;\n  this.errorCorrectLevel = errorCorrectLevel;\n  this.modules = null;\n  this.moduleCount = 0;\n  this.dataCache = null;\n  this.dataList = [];\n}\n\nQRCodeModel.prototype = {\n  addData: function (data) {\n    var newData = new QR8bitByte(data);\n    this.dataList.push(newData);\n    this.dataCache = null;\n  }, isDark: function (row, col) {\n    if (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {\n      throw new Error(row + \",\" + col);\n    }\n    return this.modules[row][col];\n  }, getModuleCount: function () {\n    return this.moduleCount;\n  }, make: function () {\n    this.makeImpl(false, this.getBestMaskPattern());\n  }, makeImpl: function (test, maskPattern) {\n    this.moduleCount = this.typeNumber * 4 + 17;\n    this.modules = new Array(this.moduleCount);\n    for (var row = 0; row < this.moduleCount; row++) {\n      this.modules[row] = new Array(this.moduleCount);\n      for (var col = 0; col < this.moduleCount; col++) {\n        this.modules[row][col] = null;\n      }\n    }\n    this.setupPositionProbePattern(0, 0);\n    this.setupPositionProbePattern(this.moduleCount - 7, 0);\n    this.setupPositionProbePattern(0, this.moduleCount - 7);\n    this.setupPositionAdjustPattern();\n    this.setupTimingPattern();\n    this.setupTypeInfo(test, maskPattern);\n    if (this.typeNumber >= 7) {\n      this.setupTypeNumber(test);\n    }\n    if (this.dataCache == null) {\n      this.dataCache = QRCodeModel.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);\n    }\n    this.mapData(this.dataCache, maskPattern);\n  }, setupPositionProbePattern: function (row, col) {\n    for (var r = -1; r <= 7; r++) {\n      if (row + r <= -1 || this.moduleCount <= row + r) continue;\n      for (var c = -1; c <= 7; c++) {\n        if (col + c <= -1 || this.moduleCount <= col + c) continue;\n        if ((0 <= r && r <= 6 && (c == 0 || c == 6)) || (0 <= c && c <= 6 && (r == 0 || r == 6)) || (2 <= r && r <= 4 && 2 <= c && c <= 4)) {\n          this.modules[row + r][col + c] = true;\n        } else {\n          this.modules[row + r][col + c] = false;\n        }\n      }\n    }\n  }, getBestMaskPattern: function () {\n    var minLostPoint = 0;\n    var pattern = 0;\n    for (var i = 0; i < 8; i++) {\n      this.makeImpl(true, i);\n      var lostPoint = QRUtil.getLostPoint(this);\n      if (i == 0 || minLostPoint > lostPoint) {\n        minLostPoint = lostPoint;\n        pattern = i;\n      }\n    }\n    return pattern;\n  }, createMovieClip: function (target_mc, instance_name, depth) {\n    var qr_mc = target_mc.createEmptyMovieClip(instance_name, depth);\n    var cs = 1;\n    this.make();\n    for (var row = 0; row < this.modules.length; row++) {\n      var y = row * cs;\n      for (var col = 0; col < this.modules[row].length; col++) {\n        var x = col * cs;\n        var dark = this.modules[row][col];\n        if (dark) {\n          qr_mc.beginFill(0, 100);\n          qr_mc.moveTo(x, y);\n          qr_mc.lineTo(x + cs, y);\n          qr_mc.lineTo(x + cs, y + cs);\n          qr_mc.lineTo(x, y + cs);\n          qr_mc.endFill();\n        }\n      }\n    }\n    return qr_mc;\n  }, setupTimingPattern: function () {\n    for (var r = 8; r < this.moduleCount - 8; r++) {\n      if (this.modules[r][6] != null) {\n        continue;\n      }\n      this.modules[r][6] = (r % 2 == 0);\n    }\n    for (var c = 8; c < this.moduleCount - 8; c++) {\n      if (this.modules[6][c] != null) {\n        continue;\n      }\n      this.modules[6][c] = (c % 2 == 0);\n    }\n  }, setupPositionAdjustPattern: function () {\n    var pos = QRUtil.getPatternPosition(this.typeNumber);\n    for (var i = 0; i < pos.length; i++) {\n      for (var j = 0; j < pos.length; j++) {\n        var row = pos[i];\n        var col = pos[j];\n        if (this.modules[row][col] != null) {\n          continue;\n        }\n        for (var r = -2; r <= 2; r++) {\n          for (var c = -2; c <= 2; c++) {\n            if (r == -2 || r == 2 || c == -2 || c == 2 || (r == 0 && c == 0)) {\n              this.modules[row + r][col + c] = true;\n            } else {\n              this.modules[row + r][col + c] = false;\n            }\n          }\n        }\n      }\n    }\n  }, setupTypeNumber: function (test) {\n    var bits = QRUtil.getBCHTypeNumber(this.typeNumber);\n    for (var i = 0; i < 18; i++) {\n      var mod = (!test && ((bits >> i) & 1) == 1);\n      this.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;\n    }\n    for (var i = 0; i < 18; i++) {\n      var mod = (!test && ((bits >> i) & 1) == 1);\n      this.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\n    }\n  }, setupTypeInfo: function (test, maskPattern) {\n    var data = (this.errorCorrectLevel << 3) | maskPattern;\n    var bits = QRUtil.getBCHTypeInfo(data);\n    for (var i = 0; i < 15; i++) {\n      var mod = (!test && ((bits >> i) & 1) == 1);\n      if (i < 6) {\n        this.modules[i][8] = mod;\n      } else if (i < 8) {\n        this.modules[i + 1][8] = mod;\n      } else {\n        this.modules[this.moduleCount - 15 + i][8] = mod;\n      }\n    }\n    for (var i = 0; i < 15; i++) {\n      var mod = (!test && ((bits >> i) & 1) == 1);\n      if (i < 8) {\n        this.modules[8][this.moduleCount - i - 1] = mod;\n      } else if (i < 9) {\n        this.modules[8][15 - i - 1 + 1] = mod;\n      } else {\n        this.modules[8][15 - i - 1] = mod;\n      }\n    }\n    this.modules[this.moduleCount - 8][8] = (!test);\n  }, mapData: function (data, maskPattern) {\n    var inc = -1;\n    var row = this.moduleCount - 1;\n    var bitIndex = 7;\n    var byteIndex = 0;\n    for (var col = this.moduleCount - 1; col > 0; col -= 2) {\n      if (col == 6) col--;\n      while (true) {\n        for (var c = 0; c < 2; c++) {\n          if (this.modules[row][col - c] == null) {\n            var dark = false;\n            if (byteIndex < data.length) {\n              dark = (((data[byteIndex] >>> bitIndex) & 1) == 1);\n            }\n            var mask = QRUtil.getMask(maskPattern, row, col - c);\n            if (mask) {\n              dark = !dark;\n            }\n            this.modules[row][col - c] = dark;\n            bitIndex--;\n            if (bitIndex == -1) {\n              byteIndex++;\n              bitIndex = 7;\n            }\n          }\n        }\n        row += inc;\n        if (row < 0 || this.moduleCount <= row) {\n          row -= inc;\n          inc = -inc;\n          break;\n        }\n      }\n    }\n  }\n};\nQRCodeModel.PAD0 = 0xEC;\nQRCodeModel.PAD1 = 0x11;\nQRCodeModel.createData = function (typeNumber, errorCorrectLevel, dataList) {\n  var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\n  var buffer = new QRBitBuffer();\n  for (var i = 0; i < dataList.length; i++) {\n    var data = dataList[i];\n    buffer.put(data.mode, 4);\n    buffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber));\n    data.write(buffer);\n  }\n  var totalDataCount = 0;\n  for (var i = 0; i < rsBlocks.length; i++) {\n    totalDataCount += rsBlocks[i].dataCount;\n  }\n  if (buffer.getLengthInBits() > totalDataCount * 8) {\n    throw new Error(\"code length overflow. (\"\n      + buffer.getLengthInBits()\n      + \">\"\n      + totalDataCount * 8\n      + \")\");\n  }\n  if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n    buffer.put(0, 4);\n  }\n  while (buffer.getLengthInBits() % 8 != 0) {\n    buffer.putBit(false);\n  }\n  while (true) {\n    if (buffer.getLengthInBits() >= totalDataCount * 8) {\n      break;\n    }\n    buffer.put(QRCodeModel.PAD0, 8);\n    if (buffer.getLengthInBits() >= totalDataCount * 8) {\n      break;\n    }\n    buffer.put(QRCodeModel.PAD1, 8);\n  }\n  return QRCodeModel.createBytes(buffer, rsBlocks);\n};\nQRCodeModel.createBytes = function (buffer, rsBlocks) {\n  var offset = 0;\n  var maxDcCount = 0;\n  var maxEcCount = 0;\n  var dcdata = new Array(rsBlocks.length);\n  var ecdata = new Array(rsBlocks.length);\n  for (var r = 0; r < rsBlocks.length; r++) {\n    var dcCount = rsBlocks[r].dataCount;\n    var ecCount = rsBlocks[r].totalCount - dcCount;\n    maxDcCount = Math.max(maxDcCount, dcCount);\n    maxEcCount = Math.max(maxEcCount, ecCount);\n    dcdata[r] = new Array(dcCount);\n    for (var i = 0; i < dcdata[r].length; i++) {\n      dcdata[r][i] = 0xff & buffer.buffer[i + offset];\n    }\n    offset += dcCount;\n    var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\n    var rawPoly = new QRPolynomial(dcdata[r], rsPoly.getLength() - 1);\n    var modPoly = rawPoly.mod(rsPoly);\n    ecdata[r] = new Array(rsPoly.getLength() - 1);\n    for (var i = 0; i < ecdata[r].length; i++) {\n      var modIndex = i + modPoly.getLength() - ecdata[r].length;\n      ecdata[r][i] = (modIndex >= 0) ? modPoly.get(modIndex) : 0;\n    }\n  }\n  var totalCodeCount = 0;\n  for (var i = 0; i < rsBlocks.length; i++) {\n    totalCodeCount += rsBlocks[i].totalCount;\n  }\n  var data = new Array(totalCodeCount);\n  var index = 0;\n  for (var i = 0; i < maxDcCount; i++) {\n    for (var r = 0; r < rsBlocks.length; r++) {\n      if (i < dcdata[r].length) {\n        data[index++] = dcdata[r][i];\n      }\n    }\n  }\n  for (var i = 0; i < maxEcCount; i++) {\n    for (var r = 0; r < rsBlocks.length; r++) {\n      if (i < ecdata[r].length) {\n        data[index++] = ecdata[r][i];\n      }\n    }\n  }\n  return data;\n};\nvar QRMode = {MODE_NUMBER: 1 << 0, MODE_ALPHA_NUM: 1 << 1, MODE_8BIT_BYTE: 1 << 2, MODE_KANJI: 1 << 3};\nvar QRErrorCorrectLevel = {L: 1, M: 0, Q: 3, H: 2};\nvar QRMaskPattern = {\n  PATTERN000: 0,\n  PATTERN001: 1,\n  PATTERN010: 2,\n  PATTERN011: 3,\n  PATTERN100: 4,\n  PATTERN101: 5,\n  PATTERN110: 6,\n  PATTERN111: 7\n};\nvar QRUtil = {\n  PATTERN_POSITION_TABLE: [[], [6, 18], [6, 22], [6, 26], [6, 30], [6, 34], [6, 22, 38], [6, 24, 42], [6, 26, 46], [6, 28, 50], [6, 30, 54], [6, 32, 58], [6, 34, 62], [6, 26, 46, 66], [6, 26, 48, 70], [6, 26, 50, 74], [6, 30, 54, 78], [6, 30, 56, 82], [6, 30, 58, 86], [6, 34, 62, 90], [6, 28, 50, 72, 94], [6, 26, 50, 74, 98], [6, 30, 54, 78, 102], [6, 28, 54, 80, 106], [6, 32, 58, 84, 110], [6, 30, 58, 86, 114], [6, 34, 62, 90, 118], [6, 26, 50, 74, 98, 122], [6, 30, 54, 78, 102, 126], [6, 26, 52, 78, 104, 130], [6, 30, 56, 82, 108, 134], [6, 34, 60, 86, 112, 138], [6, 30, 58, 86, 114, 142], [6, 34, 62, 90, 118, 146], [6, 30, 54, 78, 102, 126, 150], [6, 24, 50, 76, 102, 128, 154], [6, 28, 54, 80, 106, 132, 158], [6, 32, 58, 84, 110, 136, 162], [6, 26, 54, 82, 110, 138, 166], [6, 30, 58, 86, 114, 142, 170]],\n  G15: (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0),\n  G18: (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0),\n  G15_MASK: (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1),\n  getBCHTypeInfo: function (data) {\n    var d = data << 10;\n    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {\n      d ^= (QRUtil.G15 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15)));\n    }\n    return ((data << 10) | d) ^ QRUtil.G15_MASK;\n  },\n  getBCHTypeNumber: function (data) {\n    var d = data << 12;\n    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {\n      d ^= (QRUtil.G18 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18)));\n    }\n    return (data << 12) | d;\n  },\n  getBCHDigit: function (data) {\n    var digit = 0;\n    while (data != 0) {\n      digit++;\n      data >>>= 1;\n    }\n    return digit;\n  },\n  getPatternPosition: function (typeNumber) {\n    return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];\n  },\n  getMask: function (maskPattern, i, j) {\n    switch (maskPattern) {\n      case QRMaskPattern.PATTERN000:\n        return (i + j) % 2 == 0;\n      case QRMaskPattern.PATTERN001:\n        return i % 2 == 0;\n      case QRMaskPattern.PATTERN010:\n        return j % 3 == 0;\n      case QRMaskPattern.PATTERN011:\n        return (i + j) % 3 == 0;\n      case QRMaskPattern.PATTERN100:\n        return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0;\n      case QRMaskPattern.PATTERN101:\n        return (i * j) % 2 + (i * j) % 3 == 0;\n      case QRMaskPattern.PATTERN110:\n        return ((i * j) % 2 + (i * j) % 3) % 2 == 0;\n      case QRMaskPattern.PATTERN111:\n        return ((i * j) % 3 + (i + j) % 2) % 2 == 0;\n      default:\n        throw new Error(\"bad maskPattern:\" + maskPattern);\n    }\n  },\n  getErrorCorrectPolynomial: function (errorCorrectLength) {\n    var a = new QRPolynomial([1], 0);\n    for (var i = 0; i < errorCorrectLength; i++) {\n      a = a.multiply(new QRPolynomial([1, QRMath.gexp(i)], 0));\n    }\n    return a;\n  },\n  getLengthInBits: function (mode, type) {\n    if (1 <= type && type < 10) {\n      switch (mode) {\n        case QRMode.MODE_NUMBER:\n          return 10;\n        case QRMode.MODE_ALPHA_NUM:\n          return 9;\n        case QRMode.MODE_8BIT_BYTE:\n          return 8;\n        case QRMode.MODE_KANJI:\n          return 8;\n        default:\n          throw new Error(\"mode:\" + mode);\n      }\n    } else if (type < 27) {\n      switch (mode) {\n        case QRMode.MODE_NUMBER:\n          return 12;\n        case QRMode.MODE_ALPHA_NUM:\n          return 11;\n        case QRMode.MODE_8BIT_BYTE:\n          return 16;\n        case QRMode.MODE_KANJI:\n          return 10;\n        default:\n          throw new Error(\"mode:\" + mode);\n      }\n    } else if (type < 41) {\n      switch (mode) {\n        case QRMode.MODE_NUMBER:\n          return 14;\n        case QRMode.MODE_ALPHA_NUM:\n          return 13;\n        case QRMode.MODE_8BIT_BYTE:\n          return 16;\n        case QRMode.MODE_KANJI:\n          return 12;\n        default:\n          throw new Error(\"mode:\" + mode);\n      }\n    } else {\n      throw new Error(\"type:\" + type);\n    }\n  },\n  getLostPoint: function (qrCode) {\n    var moduleCount = qrCode.getModuleCount();\n    var lostPoint = 0;\n    for (var row = 0; row < moduleCount; row++) {\n      for (var col = 0; col < moduleCount; col++) {\n        var sameCount = 0;\n        var dark = qrCode.isDark(row, col);\n        for (var r = -1; r <= 1; r++) {\n          if (row + r < 0 || moduleCount <= row + r) {\n            continue;\n          }\n          for (var c = -1; c <= 1; c++) {\n            if (col + c < 0 || moduleCount <= col + c) {\n              continue;\n            }\n            if (r == 0 && c == 0) {\n              continue;\n            }\n            if (dark == qrCode.isDark(row + r, col + c)) {\n              sameCount++;\n            }\n          }\n        }\n        if (sameCount > 5) {\n          lostPoint += (3 + sameCount - 5);\n        }\n      }\n    }\n    for (var row = 0; row < moduleCount - 1; row++) {\n      for (var col = 0; col < moduleCount - 1; col++) {\n        var count = 0;\n        if (qrCode.isDark(row, col)) count++;\n        if (qrCode.isDark(row + 1, col)) count++;\n        if (qrCode.isDark(row, col + 1)) count++;\n        if (qrCode.isDark(row + 1, col + 1)) count++;\n        if (count == 0 || count == 4) {\n          lostPoint += 3;\n        }\n      }\n    }\n    for (var row = 0; row < moduleCount; row++) {\n      for (var col = 0; col < moduleCount - 6; col++) {\n        if (qrCode.isDark(row, col) && !qrCode.isDark(row, col + 1) && qrCode.isDark(row, col + 2) && qrCode.isDark(row, col + 3) && qrCode.isDark(row, col + 4) && !qrCode.isDark(row, col + 5) && qrCode.isDark(row, col + 6)) {\n          lostPoint += 40;\n        }\n      }\n    }\n    for (var col = 0; col < moduleCount; col++) {\n      for (var row = 0; row < moduleCount - 6; row++) {\n        if (qrCode.isDark(row, col) && !qrCode.isDark(row + 1, col) && qrCode.isDark(row + 2, col) && qrCode.isDark(row + 3, col) && qrCode.isDark(row + 4, col) && !qrCode.isDark(row + 5, col) && qrCode.isDark(row + 6, col)) {\n          lostPoint += 40;\n        }\n      }\n    }\n    var darkCount = 0;\n    for (var col = 0; col < moduleCount; col++) {\n      for (var row = 0; row < moduleCount; row++) {\n        if (qrCode.isDark(row, col)) {\n          darkCount++;\n        }\n      }\n    }\n    var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n    lostPoint += ratio * 10;\n    return lostPoint;\n  }\n};\nvar QRMath = {\n  glog: function (n) {\n    if (n < 1) {\n      throw new Error(\"glog(\" + n + \")\");\n    }\n    return QRMath.LOG_TABLE[n];\n  }, gexp: function (n) {\n    while (n < 0) {\n      n += 255;\n    }\n    while (n >= 256) {\n      n -= 255;\n    }\n    return QRMath.EXP_TABLE[n];\n  }, EXP_TABLE: new Array(256), LOG_TABLE: new Array(256)\n};\nfor (var i = 0; i < 8; i++) {\n  QRMath.EXP_TABLE[i] = 1 << i;\n}\nfor (var i = 8; i < 256; i++) {\n  QRMath.EXP_TABLE[i] = QRMath.EXP_TABLE[i - 4] ^ QRMath.EXP_TABLE[i - 5] ^ QRMath.EXP_TABLE[i - 6] ^ QRMath.EXP_TABLE[i - 8];\n}\nfor (var i = 0; i < 255; i++) {\n  QRMath.LOG_TABLE[QRMath.EXP_TABLE[i]] = i;\n}\n\nfunction QRPolynomial(num, shift) {\n  if (num.length == undefined) {\n    throw new Error(num.length + \"/\" + shift);\n  }\n  var offset = 0;\n  while (offset < num.length && num[offset] == 0) {\n    offset++;\n  }\n  this.num = new Array(num.length - offset + shift);\n  for (var i = 0; i < num.length - offset; i++) {\n    this.num[i] = num[i + offset];\n  }\n}\n\nQRPolynomial.prototype = {\n  get: function (index) {\n    return this.num[index];\n  }, getLength: function () {\n    return this.num.length;\n  }, multiply: function (e) {\n    var num = new Array(this.getLength() + e.getLength() - 1);\n    for (var i = 0; i < this.getLength(); i++) {\n      for (var j = 0; j < e.getLength(); j++) {\n        num[i + j] ^= QRMath.gexp(QRMath.glog(this.get(i)) + QRMath.glog(e.get(j)));\n      }\n    }\n    return new QRPolynomial(num, 0);\n  }, mod: function (e) {\n    if (this.getLength() - e.getLength() < 0) {\n      return this;\n    }\n    var ratio = QRMath.glog(this.get(0)) - QRMath.glog(e.get(0));\n    var num = new Array(this.getLength());\n    for (var i = 0; i < this.getLength(); i++) {\n      num[i] = this.get(i);\n    }\n    for (var i = 0; i < e.getLength(); i++) {\n      num[i] ^= QRMath.gexp(QRMath.glog(e.get(i)) + ratio);\n    }\n    return new QRPolynomial(num, 0).mod(e);\n  }\n};\n\nfunction QRRSBlock(totalCount, dataCount) {\n  this.totalCount = totalCount;\n  this.dataCount = dataCount;\n}\n\nQRRSBlock.RS_BLOCK_TABLE = [[1, 26, 19], [1, 26, 16], [1, 26, 13], [1, 26, 9], [1, 44, 34], [1, 44, 28], [1, 44, 22], [1, 44, 16], [1, 70, 55], [1, 70, 44], [2, 35, 17], [2, 35, 13], [1, 100, 80], [2, 50, 32], [2, 50, 24], [4, 25, 9], [1, 134, 108], [2, 67, 43], [2, 33, 15, 2, 34, 16], [2, 33, 11, 2, 34, 12], [2, 86, 68], [4, 43, 27], [4, 43, 19], [4, 43, 15], [2, 98, 78], [4, 49, 31], [2, 32, 14, 4, 33, 15], [4, 39, 13, 1, 40, 14], [2, 121, 97], [2, 60, 38, 2, 61, 39], [4, 40, 18, 2, 41, 19], [4, 40, 14, 2, 41, 15], [2, 146, 116], [3, 58, 36, 2, 59, 37], [4, 36, 16, 4, 37, 17], [4, 36, 12, 4, 37, 13], [2, 86, 68, 2, 87, 69], [4, 69, 43, 1, 70, 44], [6, 43, 19, 2, 44, 20], [6, 43, 15, 2, 44, 16], [4, 101, 81], [1, 80, 50, 4, 81, 51], [4, 50, 22, 4, 51, 23], [3, 36, 12, 8, 37, 13], [2, 116, 92, 2, 117, 93], [6, 58, 36, 2, 59, 37], [4, 46, 20, 6, 47, 21], [7, 42, 14, 4, 43, 15], [4, 133, 107], [8, 59, 37, 1, 60, 38], [8, 44, 20, 4, 45, 21], [12, 33, 11, 4, 34, 12], [3, 145, 115, 1, 146, 116], [4, 64, 40, 5, 65, 41], [11, 36, 16, 5, 37, 17], [11, 36, 12, 5, 37, 13], [5, 109, 87, 1, 110, 88], [5, 65, 41, 5, 66, 42], [5, 54, 24, 7, 55, 25], [11, 36, 12], [5, 122, 98, 1, 123, 99], [7, 73, 45, 3, 74, 46], [15, 43, 19, 2, 44, 20], [3, 45, 15, 13, 46, 16], [1, 135, 107, 5, 136, 108], [10, 74, 46, 1, 75, 47], [1, 50, 22, 15, 51, 23], [2, 42, 14, 17, 43, 15], [5, 150, 120, 1, 151, 121], [9, 69, 43, 4, 70, 44], [17, 50, 22, 1, 51, 23], [2, 42, 14, 19, 43, 15], [3, 141, 113, 4, 142, 114], [3, 70, 44, 11, 71, 45], [17, 47, 21, 4, 48, 22], [9, 39, 13, 16, 40, 14], [3, 135, 107, 5, 136, 108], [3, 67, 41, 13, 68, 42], [15, 54, 24, 5, 55, 25], [15, 43, 15, 10, 44, 16], [4, 144, 116, 4, 145, 117], [17, 68, 42], [17, 50, 22, 6, 51, 23], [19, 46, 16, 6, 47, 17], [2, 139, 111, 7, 140, 112], [17, 74, 46], [7, 54, 24, 16, 55, 25], [34, 37, 13], [4, 151, 121, 5, 152, 122], [4, 75, 47, 14, 76, 48], [11, 54, 24, 14, 55, 25], [16, 45, 15, 14, 46, 16], [6, 147, 117, 4, 148, 118], [6, 73, 45, 14, 74, 46], [11, 54, 24, 16, 55, 25], [30, 46, 16, 2, 47, 17], [8, 132, 106, 4, 133, 107], [8, 75, 47, 13, 76, 48], [7, 54, 24, 22, 55, 25], [22, 45, 15, 13, 46, 16], [10, 142, 114, 2, 143, 115], [19, 74, 46, 4, 75, 47], [28, 50, 22, 6, 51, 23], [33, 46, 16, 4, 47, 17], [8, 152, 122, 4, 153, 123], [22, 73, 45, 3, 74, 46], [8, 53, 23, 26, 54, 24], [12, 45, 15, 28, 46, 16], [3, 147, 117, 10, 148, 118], [3, 73, 45, 23, 74, 46], [4, 54, 24, 31, 55, 25], [11, 45, 15, 31, 46, 16], [7, 146, 116, 7, 147, 117], [21, 73, 45, 7, 74, 46], [1, 53, 23, 37, 54, 24], [19, 45, 15, 26, 46, 16], [5, 145, 115, 10, 146, 116], [19, 75, 47, 10, 76, 48], [15, 54, 24, 25, 55, 25], [23, 45, 15, 25, 46, 16], [13, 145, 115, 3, 146, 116], [2, 74, 46, 29, 75, 47], [42, 54, 24, 1, 55, 25], [23, 45, 15, 28, 46, 16], [17, 145, 115], [10, 74, 46, 23, 75, 47], [10, 54, 24, 35, 55, 25], [19, 45, 15, 35, 46, 16], [17, 145, 115, 1, 146, 116], [14, 74, 46, 21, 75, 47], [29, 54, 24, 19, 55, 25], [11, 45, 15, 46, 46, 16], [13, 145, 115, 6, 146, 116], [14, 74, 46, 23, 75, 47], [44, 54, 24, 7, 55, 25], [59, 46, 16, 1, 47, 17], [12, 151, 121, 7, 152, 122], [12, 75, 47, 26, 76, 48], [39, 54, 24, 14, 55, 25], [22, 45, 15, 41, 46, 16], [6, 151, 121, 14, 152, 122], [6, 75, 47, 34, 76, 48], [46, 54, 24, 10, 55, 25], [2, 45, 15, 64, 46, 16], [17, 152, 122, 4, 153, 123], [29, 74, 46, 14, 75, 47], [49, 54, 24, 10, 55, 25], [24, 45, 15, 46, 46, 16], [4, 152, 122, 18, 153, 123], [13, 74, 46, 32, 75, 47], [48, 54, 24, 14, 55, 25], [42, 45, 15, 32, 46, 16], [20, 147, 117, 4, 148, 118], [40, 75, 47, 7, 76, 48], [43, 54, 24, 22, 55, 25], [10, 45, 15, 67, 46, 16], [19, 148, 118, 6, 149, 119], [18, 75, 47, 31, 76, 48], [34, 54, 24, 34, 55, 25], [20, 45, 15, 61, 46, 16]];\nQRRSBlock.getRSBlocks = function (typeNumber, errorCorrectLevel) {\n  var rsBlock = QRRSBlock.getRsBlockTable(typeNumber, errorCorrectLevel);\n  if (rsBlock == undefined) {\n    throw new Error(\"bad rs block @ typeNumber:\" + typeNumber + \"/errorCorrectLevel:\" + errorCorrectLevel);\n  }\n  var length = rsBlock.length / 3;\n  var list = [];\n  for (var i = 0; i < length; i++) {\n    var count = rsBlock[i * 3 + 0];\n    var totalCount = rsBlock[i * 3 + 1];\n    var dataCount = rsBlock[i * 3 + 2];\n    for (var j = 0; j < count; j++) {\n      list.push(new QRRSBlock(totalCount, dataCount));\n    }\n  }\n  return list;\n};\nQRRSBlock.getRsBlockTable = function (typeNumber, errorCorrectLevel) {\n  switch (errorCorrectLevel) {\n    case QRErrorCorrectLevel.L:\n      return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\n    case QRErrorCorrectLevel.M:\n      return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n    case QRErrorCorrectLevel.Q:\n      return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n    case QRErrorCorrectLevel.H:\n      return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n    default:\n      return undefined;\n  }\n};\n\nfunction QRBitBuffer() {\n  this.buffer = [];\n  this.length = 0;\n}\n\nQRBitBuffer.prototype = {\n  get: function (index) {\n    var bufIndex = Math.floor(index / 8);\n    return ((this.buffer[bufIndex] >>> (7 - index % 8)) & 1) == 1;\n  }, put: function (num, length) {\n    for (var i = 0; i < length; i++) {\n      this.putBit(((num >>> (length - i - 1)) & 1) == 1);\n    }\n  }, getLengthInBits: function () {\n    return this.length;\n  }, putBit: function (bit) {\n    var bufIndex = Math.floor(this.length / 8);\n    if (this.buffer.length <= bufIndex) {\n      this.buffer.push(0);\n    }\n    if (bit) {\n      this.buffer[bufIndex] |= (0x80 >>> (this.length % 8));\n    }\n    this.length++;\n  }\n};\nvar QRCodeLimitLength = [[17, 14, 11, 7], [32, 26, 20, 14], [53, 42, 32, 24], [78, 62, 46, 34], [106, 84, 60, 44], [134, 106, 74, 58], [154, 122, 86, 64], [192, 152, 108, 84], [230, 180, 130, 98], [271, 213, 151, 119], [321, 251, 177, 137], [367, 287, 203, 155], [425, 331, 241, 177], [458, 362, 258, 194], [520, 412, 292, 220], [586, 450, 322, 250], [644, 504, 364, 280], [718, 560, 394, 310], [792, 624, 442, 338], [858, 666, 482, 382], [929, 711, 509, 403], [1003, 779, 565, 439], [1091, 857, 611, 461], [1171, 911, 661, 511], [1273, 997, 715, 535], [1367, 1059, 751, 593], [1465, 1125, 805, 625], [1528, 1190, 868, 658], [1628, 1264, 908, 698], [1732, 1370, 982, 742], [1840, 1452, 1030, 790], [1952, 1538, 1112, 842], [2068, 1628, 1168, 898], [2188, 1722, 1228, 958], [2303, 1809, 1283, 983], [2431, 1911, 1351, 1051], [2563, 1989, 1423, 1093], [2699, 2099, 1499, 1139], [2809, 2213, 1579, 1219], [2953, 2331, 1663, 1273]];\n\n\n/** Constructor */\nfunction QRCode(options) {\n  var instance = this;\n\n  //Default options\n  this.options = {\n    padding: 0,\n    width: 256,\n    height: 256,\n    typeNumber: 4,\n    color: \"#000000\",\n    background: \"#ffffff\",\n    ecl: \"M\"\n  };\n\n  //In case the options is string\n  if (typeof options === 'string') {\n    options = {\n      content: options\n    };\n  }\n\n  //Merge options\n  if (options) {\n    for (var i in options) {\n      this.options[i] = options[i];\n    }\n  }\n\n  if (typeof this.options.content !== 'string') {\n    throw new Error(\"Expected 'content' as string!\");\n  }\n\n  if (this.options.content.length === 0 /* || this.options.content.length > 7089 */) {\n    throw new Error(\"Expected 'content' to be non-empty!\");\n  }\n\n  if (!(this.options.padding >= 0)) {\n    throw new Error(\"Expected 'padding' value to be non-negative!\");\n  }\n\n  if (!(this.options.width > 0) || !(this.options.height > 0)) {\n    throw new Error(\"Expected 'width' or 'height' value to be higher than zero!\");\n  }\n\n  //Gets the error correction level\n  function _getErrorCorrectLevel(ecl) {\n    switch (ecl) {\n      case \"L\":\n        return QRErrorCorrectLevel.L;\n\n      case \"M\":\n        return QRErrorCorrectLevel.M;\n\n      case \"Q\":\n        return QRErrorCorrectLevel.Q;\n\n      case \"H\":\n        return QRErrorCorrectLevel.H;\n\n      default:\n        throw new Error(\"Unknwon error correction level: \" + ecl);\n    }\n  }\n\n  //Get type number\n  function _getTypeNumber(content, ecl) {\n    var length = _getUTF8Length(content);\n\n    var type = 1;\n    var limit = 0;\n    for (var i = 0, len = QRCodeLimitLength.length; i <= len; i++) {\n      var table = QRCodeLimitLength[i];\n      if (!table) {\n        throw new Error(\"Content too long: expected \" + limit + \" but got \" + length);\n      }\n\n      switch (ecl) {\n        case \"L\":\n          limit = table[0];\n          break;\n\n        case \"M\":\n          limit = table[1];\n          break;\n\n        case \"Q\":\n          limit = table[2];\n          break;\n\n        case \"H\":\n          limit = table[3];\n          break;\n\n        default:\n          throw new Error(\"Unknwon error correction level: \" + ecl);\n      }\n\n      if (length <= limit) {\n        break;\n      }\n\n      type++;\n    }\n\n    if (type > QRCodeLimitLength.length) {\n      throw new Error(\"Content too long\");\n    }\n\n    return type;\n  }\n\n  //Gets text length\n  function _getUTF8Length(content) {\n    var result = encodeURI(content).toString().replace(/\\%[0-9a-fA-F]{2}/g, 'a');\n    return result.length + (result.length != content ? 3 : 0);\n  }\n\n  //Generate QR Code matrix\n  var content = this.options.content;\n  var type = _getTypeNumber(content, this.options.ecl);\n  var ecl = _getErrorCorrectLevel(this.options.ecl);\n  this.qrcode = new QRCodeModel(type, ecl);\n  this.qrcode.addData(content);\n  this.qrcode.make();\n}\n\n/** Generates QR Code as SVG image */\nQRCode.prototype.svg = function () {\n  var options = this.options;\n  var modules = this.qrcode.modules;\n\n  var width = options.width;\n  var height = options.height;\n  var length = modules.length;\n  var xsize = width / (length + 2 * options.padding);\n  var ysize = height / (length + 2 * options.padding);\n\n  var rect = '<rect x=\"0\" y=\"0\" width=\"' + width + '\" height=\"' + height + '\" style=\"fill:' + options.background + ';shape-rendering:crispEdges;\"/>';\n\n  for (var y = 0; y < length; y++) {\n    for (var x = 0; x < length; x++) {\n      var module = modules[x][y];\n      if (module) {\n        var px = (x * xsize + options.padding * xsize).toString();\n        var py = (y * ysize + options.padding * ysize).toString();\n        rect += '<rect x=\"' + px + '\" y=\"' + py + '\" width=\"' + xsize + '\" height=\"' + ysize + '\" style=\"fill:' + options.color + ';shape-rendering:crispEdges;\"/>';\n      }\n    }\n  }\n\n  var svg = '<?xml version=\"1.0\" standalone=\"yes\"?>' + '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"' + width + '\" height=\"' + height + '\">';\n  svg += rect;\n  svg += '</svg>';\n\n  return svg;\n};\n\nmodule.exports = function (options) {\n  return new QRCode(options).svg();\n};\n","module.exports = function svg2Url(svgString) {\n  return 'data:image/svg+xml;utf8,' + encodeURIComponent(svgString);\n};\n"],"sourceRoot":""}